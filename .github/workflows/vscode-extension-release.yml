### vscode-extension-release.yml
name: VSCode Extension Release

on:
  push:
    tags:
      - 'stagewise-vscode-extension@**' # Ensure tag pattern is specific enough
  workflow_dispatch:

jobs:
  release-vscode-extension:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to create/update GitHub Releases and upload assets
    steps:
      - name: Checkout Code at Tag
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.10.0 # Or your desired pnpm version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Build VS Code Extension
        run: pnpm build --filter stagewise-vscode-extension

      - name: Get Version Info from Tag
        id: get_version_info
        run: |
          TAG_NAME="${{ github.ref_name }}"
          PACKAGE_NAME=$(echo "$TAG_NAME" | cut -d'@' -f1)
          VERSION_NUMBER=$(echo "$TAG_NAME" | cut -d'@' -f2)
          VSIX_FILENAME="${PACKAGE_NAME}-${VERSION_NUMBER}.vsix"
          echo "vsix_filename=${VSIX_FILENAME}" >> $GITHUB_OUTPUT
          echo "package_version=${VERSION_NUMBER}" >> $GITHUB_OUTPUT
          if [[ "${VERSION_NUMBER}" == *-* ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
          fi

      - name: Package Extension using vsce
        run: |
          cd apps/vscode-extension 
          pnpm exec vsce package --out ${{ steps.get_version_info.outputs.vsix_filename }} --no-dependencies

      - name: Publish to Visual Studio Marketplace
        env:
          IS_PRERELEASE: ${{ steps.get_version_info.outputs.is_prerelease }}
          VSIX_FILENAME: ${{ steps.get_version_info.outputs.vsix_filename }}
        run: |
          cd apps/vscode-extension
          VSCE_FLAGS=""
          if [ "$IS_PRERELEASE" == "true" ]; then
            VSCE_FLAGS="--pre-release"
          fi
          pnpm exec vsce publish --packagePath "$VSIX_FILENAME" --pat ${{ secrets.VSCE_PAT }} --no-dependencies $VSCE_FLAGS

      - name: Publish to Open VSX Registry
        env:
          IS_PRERELEASE: ${{ steps.get_version_info.outputs.is_prerelease }}
          VSIX_FILENAME: ${{ steps.get_version_info.outputs.vsix_filename }}
        run: |
          cd apps/vscode-extension
          OVSX_FLAGS=""
          if [ "$IS_PRERELEASE" == "true" ]; then
            OVSX_FLAGS="--pre-release" # -P is the shorthand for ovsx
          fi
          pnpm exec ovsx publish "$VSIX_FILENAME" -p ${{ secrets.OPEN_VSX_ACCESS_TOKEN }} $OVSX_FLAGS

      - name: Create/Update GitHub Release and Upload VSIX
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Release of stagewise VS Code Extension version ${{ steps.get_version_info.outputs.package_version }}. See CHANGELOG.md for details."
          draft: false
          prerelease: ${{ steps.get_version_info.outputs.is_prerelease == 'true' }}
          files: apps/vscode-extension/${{ steps.get_version_info.outputs.vsix_filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}